def simple_one(n):
    return (
        2 * (0 + -1) - max(1 * (0 + 22), 2 * (0 + 2 * n)) > 2
        or 2 * (0 + -1) % 2 < max(1 * (0 + 22), 2 * (0 + 2 * n)) % 2
    )


def simple_two(n):
    return not (
        min(1 * (0 + 21), 2 * (0 + -1)) - 2 * (0 + 2 * n) > 2
        or min(1 * (0 + 21), 2 * (0 + -1)) % 2 < 2 * (0 + 2 * n) % 2
    )


def nested(n):
    return all(
        (
            2 * (0 + -1) - max(1 * (0 + 22), 2 * (0 + 1 * j + 1 * n)) > 2
            or 2 * (0 + -1) % 2 < max(1 * (0 + 22), 2 * (0 + 1 * j + 1 * n)) % 2
            for j in range(n + n)
        )
    )


def disjunctive_normal_form(n):
    return (
        (
            min(1 * (0 + 0), 1 * (0 + -1)) - max(1 * (0 + 2 * n), 1 * (0 + 1 * n)) > 1
            or min(1 * (0 + 0), 1 * (0 + -1)) % 1
            < max(1 * (0 + 2 * n), 1 * (0 + 1 * n)) % 1
        )
        or (
            2 * (0 + -1) - max(2 * (0 + 1 * n), 2 * (0 + 2 * n), 1 * (0 + 34)) > 2
            or 2 * (0 + -1) % 2
            < max(2 * (0 + 1 * n), 2 * (0 + 2 * n), 1 * (0 + 34)) % 2
        )
    ) or (
        (
            min(2 * (0 + -1), 1 * (0 + 1 * n), 2 * (0 + 0)) - 2 * (0 + 2 * n) > 2
            or min(2 * (0 + -1), 1 * (0 + 1 * n), 2 * (0 + 0)) % 2 < 2 * (0 + 2 * n) % 2
        )
        or (
            min(1 * (0 + 1 * n), 2 * (0 + -1)) - max(2 * (0 + 2 * n), 1 * (0 + 34)) > 2
            or min(1 * (0 + 1 * n), 2 * (0 + -1)) % 2
            < max(2 * (0 + 2 * n), 1 * (0 + 34)) % 2
        )
    )


def negation(n):
    return (
        min(2 * (0 + -1), 2 * (0 + 2), 1 * (0 + 21)) - 2 * (0 + 2 * n) > 2
        or min(2 * (0 + -1), 2 * (0 + 2), 1 * (0 + 21)) % 2 < 2 * (0 + 2 * n) % 2
    )


def equality(n):
    return (
        1 * (0 + 22) > 2 * (0 + -1)
        and 1 * (0 + 22) < 2 * (0 + 2 * n)
        and (True and 1 * (0 + 22) < 2 * (0 + 33))
    )


def inequality(n):
    return (
        (
            2 * (0 + -1) - max(2 * (0 + 2 * n), 1 * (0 + 22)) > 2
            or 2 * (0 + -1) % 2 < max(2 * (0 + 2 * n), 1 * (0 + 22)) % 2
        )
        or (
            min(2 * (0 + -1), 1 * (0 + 22)) - 2 * (0 + 2 * n) > 2
            or min(2 * (0 + -1), 1 * (0 + 22)) % 2 < 2 * (0 + 2 * n) % 2
        )
    ) or (
        (
            1 * (0 + -1) - max(1 * (0 + 2 * n), 1 * (0 + 3)) > 1
            or 1 * (0 + -1) % 1 < max(1 * (0 + 2 * n), 1 * (0 + 3)) % 1
        )
        or (
            min(1 * (0 + 3), 1 * (0 + -1)) - 1 * (0 + 2 * n) > 1
            or min(1 * (0 + 3), 1 * (0 + -1)) % 1 < 1 * (0 + 2 * n) % 1
        )
    )


def vars_on_both_sides(n):
    return (
        min(1 * (0 + 2 * n), 3 * (0 + -1)) - max(3 * (0 + 2 * n), 3 * (0 + 4)) > 3
        or min(1 * (0 + 2 * n), 3 * (0 + -1)) % 3
        < max(3 * (0 + 2 * n), 3 * (0 + 4)) % 3
    )


def main():
    pass


if __name__ == "__main__":
    main()
